<template>
  <view class="user-posts-container">
    <text class="title">我的发布</text>
    <view v-for="(post, index) in posts" :key="index" class="post-item">
      <text class="post-title">{{ post.title }}</text>
      <text class="post-content">{{ post.content }}</text>
      <text class="post-date">{{ formatDate(post.createdAt) }}</text>
    </view>
  </view>
</template>

<script>
import { apiRequest } from '@/utils/api';

export default {
  data() {
    return {
      posts: [] // 存储用户发布的帖子
    };
  },
  onLoad(options) {
    // 获取传递过来的帖子数据
    if (options.posts) {
      this.posts = JSON.parse(decodeURIComponent(options.posts));
      this.fetchInfo(); // 加载完帖子后触发 fetchInfo 方法
    }
  },
  
  methods: {
    formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString(); // 格式化日期
    },
    async fetchInfo() {
      const updatedPosts = await Promise.all(this.posts.map(async postItem => {
        const imagesArray = JSON.parse(postItem.images);
        const imagesUrls = imagesArray.map(imageName => {
          return `http://localhost:8080/files/download/${imageName}`;
        });
        const commentsCount = await this.fetchComments(postItem.id); // 获取评论数量

        return {
          id: postItem.id,
          title: postItem.title,
          content: postItem.content,
          images: imagesUrls,
          userAvatar: postItem.Avatar,
          username: '用户' + postItem.userId,
          likes: postItem.likes,
          comments: commentsCount, // 存储评论数量
          isLiked: false
        };
      }));

      this.posts = updatedPosts; // 更新帖子数据
    },
    async fetchComments(postId) {
      try {
        const response = await apiRequest(`comments/post/${postId}`, 'get');
        return response.length; // 返回评论数量
      } catch (error) {
        console.error('获取评论失败:', error);
        return 0; // 如果失败，返回 0
      }
    }
  }
}
</script>

<style>
.user-posts-container {
  padding: 20px;
  background-color: #f5f5f5; /* 背景颜色 */
  min-height: 100vh; /* 确保容器至少占满整个视口 */
}

.title {
  font-size: 28px;
  font-weight: bold;
  margin-bottom: 20px;
}

.post-item {
  background-color: #fff; /* 每个帖子背景颜色 */
  border-radius: 8px; /* 圆角 */
  padding: 15px; /* 内边距 */
  margin-bottom: 15px; /* 帖子之间的间距 */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 阴影效果 */
}

.post-title {
  font-size: 20px;
  font-weight: bold;
  margin-bottom: 10px;
}

.post-content {
  font-size: 16px;
  margin-bottom: 10px;
}

.post-date {
  font-size: 14px;
  color: #999; /* 日期颜色 */
}
</style> 

