<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lm.lawmaster.dao.CollectsDao">

    <resultMap type="com.lm.lawmaster.entity.Collects" id="CollectsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="postId" column="post_id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CollectsMap">
        select id,
               user_id,
               post_id,
               created_at
        from collects
        where id = #{id}
    </select>

    <select id="queryByUserId" resultMap="CollectsMap">
        select id,
               user_id,
               post_id,
               created_at
        from collects
        where user_id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CollectsMap">
        select
        id, user_id, post_id, created_at
        from collects
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="postId != null">
                and post_id = #{postId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from collects
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="postId != null">
                and post_id = #{postId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into collects(user_id, post_id, created_at)
        values (#{userId}, #{postId}, #{createdAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into collects(user_id, post_id, created_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.postId}, #{entity.createdAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into collects(user_id, post_id, created_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.postId}, #{entity.createdAt})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        post_id = values(post_id),
        created_at = values(created_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update collects
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="postId != null">
                post_id = #{postId},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from collects
        where id = #{id}
    </delete>

    <select id="queryByUserIdAndPostId" resultMap="CollectsMap">
        select id,
               user_id,
               post_id,
               created_at
        from collects
        where user_id = #{userId}
          and post_id = #{postId}
    </select>

    <select id="queryAllByUserId" resultMap="CollectsMap">
        select id,
               user_id,
               post_id,
               created_at
        from collects
        where user_id = #{userId}
    </select>
</mapper>

