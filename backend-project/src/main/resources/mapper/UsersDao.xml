<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lm.lawmaster.dao.UsersDao">

    <resultMap type="com.lm.lawmaster.entity.Users" id="UsersMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="pnumber" column="pnumber" jdbcType="VARCHAR"/>
        <result property="verifycode" column="verifycode" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UsersMap">
        select id,
               username,
               password,
               nickname,
               avatar,
               role,
               created_at,
               updated_at,
               pnumber
        from users
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UsersMap">
        select
        id, username, password, nickname, avatar, role, created_at, updated_at
        from users
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from users
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into users(username, password, nickname, avatar, role, created_at, updated_at, pnumber)
        values (#{username}, #{password}, #{nickname}, #{avatar}, #{role}, #{createdAt}, #{updatedAt}, #{pnumber})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into users(username, password, nickname, avatar, role, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.nickname}, #{entity.avatar}, #{entity.role},
            #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into users(username, password, nickname, avatar, role, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.nickname}, #{entity.avatar}, #{entity.role},
            #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        nickname = values(nickname),
        avatar = values(avatar),
        role = values(role),
        created_at = values(created_at),
        updated_at = values(updated_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update" keyProperty="id" useGeneratedKeys="true">
        update users
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="role != null and role != ''">
                role = #{role},
        </if>
        <if test="createdAt != null">
                created_at = #{createdAt},
        </if>

        <if test="updatedAt != null">
                updated_at = #{updatedAt},
        </if>
            <if test="pnumber !=null and pnumber!=''">
                pnumber = #{pnumber},
            </if>
            <if test="verifycode !=null and verifycode!=''">
                verifycode = #{verifycode}
            </if>
        </set>
        where id = #{id}
    </update>
    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from users
        where id = #{id}
    </delete>

    <!--通过用户名查询单条数据-->
    <select id="findByUsername" resultMap="UsersMap">
        select id,
               username,
               password,
               nickname,
               avatar,
               role,
               created_at,
               updated_at
        from users
        where username = #{username}
    </select>


<select id="getAllUsersCount" resultType="int">
    select count(*) from users
</select>

<!--    getAllUsers-->
<select id="getAllUsers" resultMap="UsersMap">
    select id,
           username,
           password,
        nickname,
        avatar,
        role,
        created_at,
        updated_at,
 pnumber
    from users
</select>
<select id="queryByRole" resultMap="UsersMap">
    select id,
           username,
           password,
           nickname,
           avatar,
           role,
           created_at,
           updated_at
    from users
    where role = #{role}
</select>
<select id="queryByUsername" resultMap="UsersMap">
    select id,
           username,
           password,
           nickname,
        avatar,
        role,
        created_at,
        updated_at
    from users
    where username  LIKE CONCAT('%', #{username}, '%')
</select>
<!--List<Map<String, Object>> findWeeklyUserCount();-->
    <select id="findWeeklyUserCount" resultType="map">
        SELECT DATE(created_at) AS userDate, COUNT(*) AS userCount
        FROM users
        WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
        GROUP BY userDate
        ORDER BY userDate
    </select>
<!--    findByPnumber-->

    <select id="findByPnumber" resultMap="UsersMap">
        select id,
           username,
           password,
           nickname,
           avatar,
           role,
           created_at,
        updated_at,
    pnumber,
    verifycode
    from users
    where pnumber = #{pnumber}
</select>
<!--    changePassword-->
    <update id="changePassword">
        update users
        set password = #{newPassword}
        where id = #{userid}
    </update>
</mapper>

